---
synapse: false
synapse_db:
  database:
    # The database engine name
    name: psycopg2
    # Arguments to pass to the engine
    args:
      user: synapse
      password: "{{ synapse_db_pass }}"
      database: synapse
      host: localhost
      cp_min: 5
      cp_max: 10
      # seconds of inactivity after which TCP should send a keepalive message to the server
      keepalives_idle: 10
      # the number of seconds after which a TCP keepalive message that is not
      # acknowledged by the server should be retransmitted
      keepalives_interval: 10
      # the number of TCP keepalives that can be lost before the client's connection
      # to the server is considered dead
      keepalives_count: 3
synapse_server_name: "{{ inventory_hostname }}"
synapse_source: debian
synapse_homeserver:
  # PEM encoded X509 certificate for TLS.
  # You can replace the self-signed certificate that synapse
  # autogenerates on launch with your own SSL certificate + key pair
  # if you like.  Any required intermediary certificates can be
  # appended after the primary certificate in hierarchical order.
  # tls_certificate_path: "/etc/matrix-synapse/homeserver.tls.crt"
  tls_certificate_path: "/etc/ssl/le/{{ synapse_server_name }}.fullchain.pem"
  # PEM encoded private key for TLS
  # tls_private_key_path: "/etc/matrix-synapse/homeserver.tls.key"
  tls_private_key_path: "/etc/ssl/le/{{ synapse_server_name }}.key.pem"
  # PEM dh parameters for ephemeral keys
  tls_dh_params_path: "/etc/matrix-synapse/homeserver.tls.dh"
  # Don't bind to the https port
  no_tls: true
  # List of allowed TLS fingerprints for this server to publish along
  # with the signing keys for this server. Other matrix servers that
  # make HTTPS requests to this server will check that the TLS
  # certificates returned by this server match one of the fingerprints.
  #
  # Synapse automatically adds the fingerprint of its own certificate
  # to the list. So if federation traffic is handled directly by synapse
  # then no modification to the list is required.
  #
  # If synapse is run behind a load balancer that handles the TLS then it
  # will be necessary to add the fingerprints of the certificates used by
  # the loadbalancers to this list if they are different to the one
  # synapse is using.
  #
  # Homeservers are permitted to cache the list of TLS fingerprints
  # returned in the key responses up to the "valid_until_ts" returned in
  # key. It may be necessary to publish the fingerprints of a new
  # certificate and wait until the "valid_until_ts" of the previous key
  # responses have passed before deploying it.
  #
  # You can calculate a fingerprint from a given TLS listener via:
  # openssl s_client -connect $host:$port < /dev/null 2> /dev/null |
  #   openssl x509 -outform DER | openssl sha256 -binary | base64 | tr -d '='
  # or by checking matrix.org/federationtester/api/report?server_name=$host
  #
  tls_fingerprints: []
  # tls_fingerprints: [{"sha256": "<base64_encoded_sha256_fingerprint>"}]

  ## Server ##

  # Whether or not to report homeserver usage statistics to matrix.org. See
  # https://matrix-org.github.io/synapse/develop/usage/administration/monitoring/reporting_homeserver_usage_statistics.html
  report_stats: false

  # When running as a daemon, the file to store the pid in
  pid_file: "/var/run/matrix-synapse.pid"
  # CPU affinity mask. Setting this restricts the CPUs on which the
  # process will be scheduled. It is represented as a bitmask, with the
  # lowest order bit corresponding to the first logical CPU and the
  # highest order bit corresponding to the last logical CPU. Not all CPUs
  # may exist on a given system but a mask may specify more CPUs than are
  # present.
  #
  # For example:
  #    0x00000001  is processor #0,
  #    0x00000003  is processors #0 and #1,
  #    0xFFFFFFFF  is all processors (#0 through #31).
  #
  # Pinning a Python process to a single CPU is desirable, because Python
  # is inherently single-threaded due to the GIL, and can suffer a
  # 30-40% slowdown due to cache blow-out and thread context switching
  # if the scheduler happens to schedule the underlying threads across
  # different cores. See
  # https://www.mirantis.com/blog/improve-performance-python-programs-restricting-single-cpu/.
  #
  # cpu_affinity: 0xFFFFFFFF

  # The path to the web client which will be served at /_matrix/client/
  # if 'webclient' is configured under the 'listeners' configuration.
  #
  # web_client_location: "/path/to/web/root"

  # The public-facing base URL for the client API (not including _matrix/...)
  # public_baseurl: https://example.com:8448/
  public_baseurl: https://{{ synapse_server_name }}/

  # Set the soft limit on the number of file descriptors synapse can use
  # Zero is used to indicate synapse should set the soft limit to the
  # hard limit.
  soft_file_limit: 0
  # Set to false to disable presence tracking on this homeserver.
  #
  # use_presence: false

  # Whether to require authentication to retrieve profile data (avatars,
  # display names) of other users through the client API. Defaults to
  # 'false'. Note that profile data is also available via the federation
  # API, so this setting is of limited value if federation is enabled on
  # the server.
  #
  # require_auth_for_profile_requests: true

  # Uncomment to require a user to share a room with another user in order
  # to retrieve their profile information. Only checked on Client-Server
  # requests. Profile requests from other servers should be checked by the
  # requesting server. Defaults to 'false'.
  #
  # limit_profile_requests_to_users_who_share_rooms: true

  # If set to 'true', removes the need for authentication to access the server's
  # public rooms directory through the client API, meaning that anyone can
  # query the room directory. Defaults to 'false'.
  #
  # allow_public_rooms_without_auth: true

  # If set to 'true', allows any other homeserver to fetch the server's public
  # rooms directory via federation. Defaults to 'false'.
  #
  # allow_public_rooms_over_federation: true

  # The default room version for newly created rooms.
  #
  # Known room versions are listed here:
  # https://matrix.org/docs/spec/#complete-list-of-room-versions
  #
  # For example, for room version 1, default_room_version should be set
  # to "1".
  #
  # default_room_version: "5"

  # The GC threshold parameters to pass to `gc.set_threshold`, if defined
  # gc_thresholds: [700, 10, 10]

  # Set the limit on the returned events in the timeline in the get
  # and sync operations. The default value is -1, means no upper limit.
  # filter_timeline_limit: 5000

  # Whether room invites to users on this server should be blocked
  # (except those sent by local server admins). The default is False.
  # block_non_admin_invites: true

  # Room searching
  #
  # If disabled, new messages will not be indexed for searching and users
  # will receive errors when searching for messages. Defaults to enabled.
  #
  # enable_search: false

  # Restrict federation to the following whitelist of domains.
  # N.B. we recommend also firewalling your federation listener to limit
  # inbound federation traffic as early as possible, rather than relying
  # purely on this application-layer restriction.  If not specified, the
  # default is to whitelist everything.
  #
  # federation_domain_whitelist:
  #  - lon.example.com
  #  - nyc.example.com
  #  - syd.example.com

  # Prevent federation requests from being sent to the following
  # blacklist IP address CIDR ranges. If this option is not specified, or
  # specified with an empty list, no ip range blacklist will be enforced.
  #
  # As of Synapse v1.4.0 this option also affects any outbound requests to identity
  # servers provided by user input.
  #
  # (0.0.0.0 and :: are always blacklisted, whether or not they are explicitly
  # listed here, since they correspond to unroutable addresses.)
  #
  federation_ip_range_blacklist:
    - '127.0.0.0/8'
    - '10.0.0.0/8'
    - '172.16.0.0/12'
    - '192.168.0.0/16'
    - '100.64.0.0/10'
    - '169.254.0.0/16'
    - '::1/128'
    - 'fe80::/64'
    - 'fc00::/7'
  # List of ports that Synapse should listen on, their purpose and their
  # configuration.
  #
  # Options for each listener include:
  #
  #   port: the TCP port to bind to
  #
  #   bind_addresses: a list of local addresses to listen on. The default is
  #       'all local interfaces'.
  #
  #   type: the type of listener. Normally 'http', but other valid options are:
  #       'manhole' (see docs/manhole.md),
  #       'metrics' (see docs/metrics-howto.md),
  #       'replication' (see docs/workers.md).
  #
  #   tls: set to true to enable TLS for this listener. Will use the TLS
  #       key/cert specified in tls_private_key_path / tls_certificate_path.
  #
  #   x_forwarded: Only valid for an 'http' listener. Set to true to use the
  #       X-Forwarded-For header as the client IP. Useful when Synapse is
  #       behind a reverse-proxy.
  #
  #   resources: Only valid for an 'http' listener. A list of resources to host
  #       on this port. Options for each resource are:
  #
  #       names: a list of names of HTTP resources. See below for a list of
  #           valid resource names.
  #
  #       compress: set to true to enable HTTP comression for this resource.
  #
  #   additional_resources: Only valid for an 'http' listener. A map of
  #        additional endpoints which should be loaded via dynamic modules.
  #
  # Valid resource names are:
  #
  #   client: the client-server API (/_matrix/client), and the synapse admin
  #       API (/_synapse/admin). Also implies 'media' and 'static'.
  #
  #   consent: user consent forms (/_matrix/consent). See
  #       docs/consent_tracking.md.
  #
  #   federation: the server-server API (/_matrix/federation). Also implies
  #       'media', 'keys', 'openid'
  #
  #   keys: the key discovery API (/_matrix/keys).
  #
  #   media: the media API (/_matrix/media).
  #
  #   metrics: the metrics interface. See docs/metrics-howto.md.
  #
  #   openid: OpenID authentication.
  #
  #   replication: the HTTP replication API (/_synapse/replication). See
  #       docs/workers.md.
  #
  #   static: static resources under synapse/static (/_matrix/static). (Mostly
  #       useful for 'fallback authentication'.)
  #
  #   webclient: A web client. Requires web_client_location to be set.
  #
  listeners:
    # Main HTTPS listener
    # For when matrix traffic is sent directly to synapse.
    # The port to listen for HTTPS requests on.
    # - port: 8448
    #   # Local addresses to listen on.
    #   # On Linux and Mac OS, `::` will listen on all IPv4 and IPv6
    #   # addresses by default. For most other OSes, this will only listen
    #   # on IPv6.
    #   bind_addresses:
    #     - '::1'
    #     - '127.0.0.1'
    #     # - '::'
    #     # - '0.0.0.0'
    #   # This is a 'http' listener, allows us to specify 'resources'.
    #   type: http
    #   tls: true
    #   # Use the X-Forwarded-For (XFF) header as the client IP and not the
    #   # actual client IP.
    #   x_forwarded: false
    #   # List of HTTP resources to serve on this listener.
    #   resources:
    #     # List of resources to host on this listener.
    #     - names:
    #         # The client-server APIs, both v1 and v2
    #         - client
    #       # Should synapse compress HTTP responses to clients that support it?
    #       # This should be disabled if running synapse behind a load balancer
    #       # that can do automatic compression.
    #       compress: true
    #     # Federation APIs
    #     - names: [federation]
    #       compress: false
    #       # optional list of additional endpoints which can be loaded via
    #       # dynamic modules
    #       # additional_resources:
    #       #   "/_matrix/my/custom/endpoint":
    #       #     module: my_module.CustomRequestHandler
    #       #     config: {}
    # Unsecure HTTP listener,
    # For when matrix traffic passes through loadbalancer that unwraps TLS.
    - port: 8008
      tls: false
      bind_addresses:
        - '::1'
        - '127.0.0.1'
        # - '::'
        # - '0.0.0.0'
      type: http
      x_forwarded: true
      resources:
        - names:
            - client
            - federation
          compress: false
          # Turn on the twisted ssh manhole service on localhost on the given
          # port.
          # - port: 9000
          #   bind_addresses:
          #     - '::1'
          #     - '127.0.0.1'
          #   type: manhole
  # Number of events to cache in memory.
  event_cache_size: "10K"
  # A yaml python logging config file
  log_config: "/etc/matrix-synapse/log.yaml"
  ## Ratelimiting ##

  # Ratelimiting settings for client actions (registration, login, messaging).
  #
  # Each ratelimiting configuration is made of two parameters:
  #   - per_second: number of requests a client can send per second.
  #   - burst_count: number of requests a client can send before being throttled.
  #
  # Synapse currently uses the following configurations:
  #   - one for messages that ratelimits sending based on the account the client
  #     is using
  #   - one for registration that ratelimits registration requests based on the
  #     client's IP address.
  #   - one for login that ratelimits login requests based on the client's IP
  #     address.
  #   - one for login that ratelimits login requests based on the account the
  #     client is attempting to log into.
  #   - one for login that ratelimits login requests based on the account the
  #     client is attempting to log into, based on the amount of failed login
  #     attempts for this account.
  #   - one for ratelimiting redactions by room admins. If this is not explicitly
  #     set then it uses the same ratelimiting as per rc_message. This is useful
  #     to allow room admins to deal with abuse quickly.
  #
  # The defaults are as shown below.
  #
  # rc_message:
  #   per_second: 0.2
  #   burst_count: 10
  #
  # rc_registration:
  #   per_second: 0.17
  #   burst_count: 3
  #
  # rc_login:
  #   address:
  #     per_second: 0.17
  #     burst_count: 3
  #   account:
  #     per_second: 0.17
  #     burst_count: 3
  #   failed_attempts:
  #     per_second: 0.17
  #     burst_count: 3
  #
  # rc_admin_redaction:
  #   per_second: 1
  #   burst_count: 50

  # Ratelimiting settings for incoming federation
  #
  # The rc_federation configuration is made up of the following settings:
  #   - window_size: window size in milliseconds
  #   - sleep_limit: number of federation requests from a single server in
  #     a window before the server will delay processing the request.
  #   - sleep_delay: duration in milliseconds to delay processing events
  #     from remote servers by if they go over the sleep limit.
  #   - reject_limit: maximum number of concurrent federation requests
  #     allowed from a single server
  #   - concurrent: number of federation requests to concurrently process
  #     from a single server
  #
  # The defaults are as shown below.
  #
  # rc_federation:
  #   window_size: 1000
  #   sleep_limit: 10
  #   sleep_delay: 500
  #   reject_limit: 50
  #   concurrent: 3

  # Target outgoing federation transaction frequency for sending read-receipts,
  # per-room.
  #
  # If we end up trying to send out more read-receipts, they will get buffered up
  # into fewer transactions.
  #
  # federation_rr_transactions_per_room_per_second: 50

  ## Media Store ##

  # Enable the media store service in the Synapse master. Uncomment the
  # following if you are using a separate media store worker.
  #
  # enable_media_repo: false

  # Directory where uploaded images and attachments are stored.
  media_store_path: "/var/lib/matrix-synapse/media"
  # Media storage providers allow media to be stored in different
  # locations.
  # media_storage_providers:
  # - module: file_system
  #   # Whether to store newly uploaded local files
  #   store_local: false
  #   # Whether to store newly downloaded remote files
  #   store_remote: false
  #   # Whether to wait for successful storage for local uploads
  #   store_synchronous: false
  #   config:
  #     directory: /mnt/some/other/directory

  # Directory where in-progress uploads are stored.
  uploads_path: "/var/lib/matrix-synapse/uploads"
  # The largest allowed upload size in bytes
  max_upload_size: "100M"
  # Maximum number of pixels that will be thumbnailed
  max_image_pixels: "32M"
  # Whether to generate new thumbnails on the fly to precisely match
  # the resolution requested by the client. If true then whenever
  # a new resolution is requested by the client the server will
  # generate a new thumbnail. If false the server will pick a thumbnail
  # from a precalculated list.
  dynamic_thumbnails: false
  # List of thumbnail to precalculate when an image is uploaded.
  thumbnail_sizes:
    - width: 32
      height: 32
      method: crop
    - width: 96
      height: 96
      method: crop
    - width: 320
      height: 240
      method: scale
    - width: 640
      height: 480
      method: scale
    - width: 800
      height: 600
      method: scale
  # Is the preview URL API enabled?  If enabled, you *must* specify
  # an explicit url_preview_ip_range_blacklist of IPs that the spider is
  # denied from accessing.
  url_preview_enabled: false
  # List of IP address CIDR ranges that the URL preview spider is denied
  # from accessing.  There are no defaults: you must explicitly
  # specify a list for URL previewing to work.  You should specify any
  # internal services in your network that you do not want synapse to try
  # to connect to, otherwise anyone in any Matrix room could cause your
  # synapse to issue arbitrary GET requests to your internal services,
  # causing serious security issues.
  #
  # (0.0.0.0 and :: are always blacklisted, whether or not they are explicitly
  # listed here, since they correspond to unroutable addresses.)
  #
  # This must be specified if url_preview_enabled is set. It is recommended that
  # you uncomment the following list as a starting point.
  #
  # url_preview_ip_range_blacklist:
  # - '127.0.0.0/8'
  # - '10.0.0.0/8'
  # - '172.16.0.0/12'
  # - '192.168.0.0/16'
  # - '100.64.0.0/10'
  # - '169.254.0.0/16'
  # - '::1/128'
  # - 'fe80::/64'
  # - 'fc00::/7'

  # List of IP address CIDR ranges that the URL preview spider is allowed
  # to access even if they are specified in url_preview_ip_range_blacklist.
  # This is useful for specifying exceptions to wide-ranging blacklisted
  # target IP ranges - e.g. for enabling URL previews for a specific private
  # website only visible in your network.
  #
  # url_preview_ip_range_whitelist:
  # - '192.168.1.1'

  # Optional list of URL matches that the URL preview spider is
  # denied from accessing.  You should use url_preview_ip_range_blacklist
  # in preference to this, otherwise someone could define a public DNS
  # entry that points to a private IP address and circumvent the blacklist.
  # This is more useful if you know there is an entire shape of URL that
  # you know that will never want synapse to try to spider.
  #
  # Each list entry is a dictionary of url component attributes as returned
  # by urlparse.urlsplit as applied to the absolute form of the URL.  See
  # https://docs.python.org/2/library/urlparse.html#urlparse.urlsplit
  # The values of the dictionary are treated as an filename match pattern
  # applied to that component of URLs, unless they start with a ^ in which
  # case they are treated as a regular expression match.  If all the
  # specified component matches for a given list item succeed, the URL is
  # blacklisted.
  #
  # url_preview_url_blacklist:
  # # blacklist any URL with a username in its URI
  # - username: '*'
  #
  # # blacklist all *.google.com URLs
  # - netloc: 'google.com'
  # - netloc: '*.google.com'
  #
  # # blacklist all plain HTTP URLs
  # - scheme: 'http'
  #
  # # blacklist http(s)://www.acme.com/foo
  # - netloc: 'www.acme.com'
  #   path: '/foo'
  #
  # # blacklist any URL with a literal IPv4 address
  # - netloc: '^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$'

  # The largest allowed URL preview spidering size in bytes
  max_spider_size: "10M"
  # A list of values for the Accept-Language HTTP header used when
  # downloading webpages during URL preview generation. This allows
  # Synapse to specify the preferred languages that URL previews should
  # be in when communicating with remote servers.
  #
  # Each value is a IETF language tag; a 2-3 letter identifier for a
  # language, optionally followed by subtags separated by '-', specifying
  # a country or region variant.
  #
  # Multiple values can be provided, and a weight can be added to each by
  # using quality value syntax (;q=). '*' translates to any language.
  #
  # Defaults to "en".
  #
  # Example:
  #
  # url_preview_accept_language:
  #   - en-UK
  #   - en-US;q=0.9
  #   - fr;q=0.8
  #   - *;q=0.7
  #
  url_preview_accept_language:
  #   - en

  ## Captcha ##
  # See docs/CAPTCHA_SETUP.md for full details of configuring this.

  # This Home Server's ReCAPTCHA public key.
  recaptcha_public_key: "YOUR_PUBLIC_KEY"
  # This Home Server's ReCAPTCHA private key.
  recaptcha_private_key: "YOUR_PRIVATE_KEY"
  # Enables ReCaptcha checks when registering, preventing signup
  # unless a captcha is answered. Requires a valid ReCaptcha
  # public/private key.
  enable_registration_captcha: false
  # The API endpoint to use for verifying m.login.recaptcha responses.
  recaptcha_siteverify_api: "https://www.google.com/recaptcha/api/siteverify"
  ## TURN ##

  # The public URIs of the TURN server to give to clients
  turn_uris: []
  # The shared secret used to compute passwords for the TURN server
  turn_shared_secret: "YOUR_SHARED_SECRET"
  # The Username and password if the TURN server needs them and
  # does not use a token
  # turn_username: "TURNSERVER_USERNAME"
  # turn_password: "TURNSERVER_PASSWORD"

  # How long generated TURN credentials last
  turn_user_lifetime: "1h"
  # Whether guests should be allowed to use the TURN server.
  # This defaults to True, otherwise VoIP will be unreliable for guests.
  # However, it does introduce a slight security risk as it allows users to
  # connect to arbitrary endpoints without having first signed up for a
  # valid account (e.g. by passing a CAPTCHA).
  turn_allow_guests: false
  ## Registration ##

  # Enable registration for new users.
  #
  enable_registration: false
  # Optional account validity configuration. This allows for accounts to be denied
  # any request after a given period.
  #
  # Once this feature is enabled, Synapse will look for registered users without an
  # expiration date at startup and will add one to every account it found using the
  # current settings at that time.
  # This means that, if a validity period is set, and Synapse is restarted (it will
  # then derive an expiration date from the current validity period), and some time
  # after that the validity period changes and Synapse is restarted, the users'
  # expiration dates won't be updated unless their account is manually renewed. This
  # date will be randomly selected within a range [now + period - d ; now + period],
  # where d is equal to 10% of the validity period.
  #
  account_validity:
  # The account validity feature is disabled by default. Uncomment the
  # following line to enable it.
  #
  # enabled: true

  # The period after which an account is valid after its registration. When
  # renewing the account, its validity period will be extended by this amount
  # of time. This parameter is required when using the account validity
  # feature.
  #
  # period: 6w

  # The amount of time before an account's expiry date at which Synapse will
  # send an email to the account's email address with a renewal link. By
  # default, no such emails are sent.
  #
  # If you enable this setting, you will also need to fill out the 'email' and
  # 'public_baseurl' configuration sections.
  #
  # renew_at: 1w

  # The subject of the email sent out with the renewal link. '%(app)s' can be
  # used as a placeholder for the 'app_name' parameter from the 'email'
  # section.
  #
  # Note that the placeholder must be written '%(app)s', including the
  # trailing 's'.
  #
  # If this is not set, a default value is used.
  #
  # renew_email_subject: "Renew your %(app)s account"

  # Directory in which Synapse will try to find templates for the HTML files to
  # serve to the user when trying to renew an account. If not set, default
  # templates from within the Synapse package will be used.
  #
  # template_dir: "res/templates"

  # File within 'template_dir' giving the HTML to be displayed to the user after
  # they successfully renewed their account. If not set, default text is used.
  #
  # account_renewed_html_path: "account_renewed.html"

  # File within 'template_dir' giving the HTML to be displayed when the user
  # tries to renew an account with an invalid renewal token. If not set,
  # default text is used.
  #
  # invalid_token_html_path: "invalid_token.html"

  # Time that a user's session remains valid for, after they log in.
  #
  # Note that this is not currently compatible with guest logins.
  #
  # Note also that this is calculated at login time: changes are not applied
  # retrospectively to users who have already logged in.
  #
  # By default, this is infinite.
  #
  # session_lifetime: 24h

  # The user must provide all of the below types of 3PID when registering.
  #
  # registrations_require_3pid:
  #     - email
  #     - msisdn

  # Explicitly disable asking for MSISDNs from the registration
  # flow (overrides registrations_require_3pid if MSISDNs are set as required)
  #
  # disable_msisdn_registration: true

  # Mandate that users are only allowed to associate certain formats of
  # 3PIDs with accounts on this server.
  #
  # allowed_local_3pids:
  #     - medium: email
  #       pattern: ".*@matrix\.org"
  #     - medium: email
  #       pattern: ".*@vector\.im"
  #     - medium: msisdn
  #       pattern: "\+44"

  # Enable 3PIDs lookup requests to identity servers from this server.
  #
  # enable_3pid_lookup: true

  # Set the number of bcrypt rounds used to generate password hash.
  # Larger numbers increase the work factor needed to generate the hash.
  # The default number is 12 (which equates to 2^12 rounds).
  # N.B. that increasing this will exponentially increase the time required
  # to register or login - e.g. 24 => 2^24 rounds which will take >20 mins.
  bcrypt_rounds: 12
  # Allows users to register as guests without a password/email/etc, and
  # participate in rooms hosted on this server which have been made
  # accessible to anonymous users.
  allow_guest_access: false
  # The identity server which we suggest that clients should use when users log
  # in on this server.
  #
  # (By default, no suggestion is made, so it is left up to the client.
  # This setting is ignored unless public_baseurl is also set.)
  #
  # default_identity_server: https://matrix.org

  # The list of identity servers trusted to verify third party
  # identifiers by this server.
  #
  # Also defines the ID server which will be called when an account is
  # deactivated (one will be picked arbitrarily).
  #
  # Note: This option is deprecated. Since v0.99.4, Synapse has tracked which identity
  # server a 3PID has been bound to. For 3PIDs bound before then, Synapse runs a
  # background migration script, informing itself that the identity server all of its
  # 3PIDs have been bound to is likely one of the below.
  #
  # As of Synapse v1.4.0, all other functionality of this option has been deprecated, and
  # it is now solely used for the purposes of the background migration script, and can be
  # removed once it has run.
  trusted_third_party_id_servers:
    - matrix.org
    - vector.im
    - riot.im
  # Handle threepid (email/phone etc) registration and password resets through a set of
  # *trusted* identity servers. Note that this allows the configured identity server to
  # reset passwords for accounts!
  #
  # Be aware that if `email` is not set, and SMTP options have not been
  # configured in the email config block, registration and user password resets via
  # email will be globally disabled.
  #
  # Additionally, if `msisdn` is not set, registration and password resets via msisdn
  # will be disabled regardless. This is due to Synapse currently not supporting any
  # method of sending SMS messages on its own.
  #
  # To enable using an identity server for operations regarding a particular third-party
  # identifier type, set the value to the URL of that identity server as shown in the
  # examples below.
  #
  # Servers handling the these requests must answer the `/requestToken` endpoints defined
  # by the Matrix Identity Service API specification:
  # https://matrix.org/docs/spec/identity_service/latest
  #
  # If a delegate is specified, the config option public_baseurl must also be filled out.
  #
  account_threepid_delegates:
  # email: https://example.com     # Delegate email sending to example.com
  # msisdn: http://localhost:8090  # Delegate SMS sending to this local process

  # Whether users are allowed to change their displayname after it has
  # been initially set. Useful when provisioning users based on the
  # contents of a third-party directory.
  #
  # Does not apply to server administrators. Defaults to 'true'
  #
  # enable_set_displayname: false

  # Whether users are allowed to change their avatar after it has been
  # initially set. Useful when provisioning users based on the contents
  # of a third-party directory.
  #
  # Does not apply to server administrators. Defaults to 'true'
  #
  # enable_set_avatar_url: false

  # Whether users can change the 3PIDs associated with their accounts
  # (email address and msisdn).
  #
  # Defaults to 'true'
  #
  # enable_3pid_changes: false

  # Users who register on this homeserver will automatically be joined
  # to these rooms
  # auto_join_rooms:
  #    - "#example:example.com"

  ## Metrics ###

  # Enable collection and rendering of performance metrics
  enable_metrics: false
  ## API Configuration ##

  # A list of event types that will be included in the room_invite_state
  # room_prejoin_state:
  room_invite_state_types:
    - "m.room.join_rules"
    - "m.room.canonical_alias"
    - "m.room.avatar"
    - "m.room.encryption"
    - "m.room.name"
    - "m.room.create"
    - "m.room.topic"
  # A list of application service config file to use
  app_service_config_files: []

  # Used to enable access token expiration.
  expire_access_token: false
  ## Signing Keys ##

  # Path to the signing key to sign messages with
  signing_key_path: "/etc/matrix-synapse/homeserver.signing.key"
  # The keys that the server used to sign messages with but won't use
  # to sign new messages. E.g. it has lost its private key
  old_signing_keys: {}
  #  "ed25519:auto":
  #    # Base64 encoded public key
  #    key: "The public part of your old signing key."
  #    # Millisecond POSIX timestamp when the key expired.
  #    expired_ts: 123456789123

  # How long key response published by this server is valid for.
  # Used to set the valid_until_ts in /key/v2 APIs.
  # Determines how quickly servers will query to check which keys
  # are still valid.
  # 1 Day.
  key_refresh_interval: "1d"
  # The trusted servers to download signing keys from.
  #
  # When we need to fetch a signing key, each server is tried in parallel.
  #
  # Normally, the connection to the key server is validated via TLS certificates.
  # Additional security can be provided by configuring a `verify key`, which
  # will make synapse check that the response is signed by that key.
  #
  # This setting supercedes an older setting named `perspectives`. The old format
  # is still supported for backwards-compatibility, but it is deprecated.
  #
  # 'trusted_key_servers' defaults to matrix.org, but using it will generate a
  # warning on start-up. To suppress this warning, set
  # 'suppress_key_server_warning' to true.
  #
  # Options for each entry in the list include:
  #
  #    server_name: the name of the server. required.
  #
  #    verify_keys: an optional map from key id to base64-encoded public key.
  #       If specified, we will check that the response is signed by at least
  #       one of the given keys.
  #
  #    accept_keys_insecurely: a boolean. Normally, if `verify_keys` is unset,
  #       and federation_verify_certificates is not `true`, synapse will refuse
  #       to start, because this would allow anyone who can spoof DNS responses
  #       to masquerade as the trusted key server. If you know what you are doing
  #       and are sure that your network environment provides a secure connection
  #       to the key server, you can set this to `true` to override this
  #       behaviour.
  #
  # An example configuration might look like:
  #
  # trusted_key_servers:
  #  - server_name: "my_trusted_server.example.com"
  #    verify_keys:
  #      "ed25519:auto": "abcdefghijklmnopqrstuvwxyzabcdefghijklmopqr"
  #  - server_name: "my_other_trusted_server.example.com"
  #
  trusted_key_servers:
    - server_name: "matrix.org"
  # Uncomment the following to disable the warning that is emitted when the
  # trusted_key_servers include 'matrix.org'. See above.
  #
  # suppress_key_server_warning: true

  # The signing keys to use when acting as a trusted key server. If not specified
  # defaults to the server signing key.
  #
  # Can contain multiple keys, one per line.
  #
  # key_server_signing_keys_path: "key_server_signing_keys.key"

  # The JWT needs to contain a globally unique "sub" (subject) claim.
  #
  # jwt_config:
  #    enabled: true
  #    secret: "a secret"
  #    algorithm: "HS256"

  # Enable password for login.
  password_config:
    enabled: true
    # Uncomment and change to a secret random string for extra security.
    # DO NOT CHANGE THIS AFTER INITIAL SETUP!
    #
    # pepper: "EVEN_MORE_SECRET"

    # Define and enforce a password policy. Each parameter is optional.
    # This is an implementation of MSC2000.
    #
    policy:
    # Whether to enforce the password policy.
    # Defaults to 'false'.
    #
    # enabled: true

    # Minimum accepted length for a password.
    # Defaults to 0.
    #
    # minimum_length: 15

    # Whether a password must contain at least one digit.
    # Defaults to 'false'.
    #
    # require_digit: true

    # Whether a password must contain at least one symbol.
    # A symbol is any character that's not a number or a letter.
    # Defaults to 'false'.
    #
    # require_symbol: true

    # Whether a password must contain at least one lowercase letter.
    # Defaults to 'false'.
    #
    # require_lowercase: true

    # Whether a password must contain at least one lowercase letter.
    # Defaults to 'false'.
    #
    # require_uppercase: true
  # Enable sending emails for notification events
  # Defining a custom URL for Riot is only needed if email notifications
  # should contain links to a self-hosted installation of Riot; when set
  # the "app_name" setting is ignored.
  #
  # If your SMTP server requires authentication, the optional smtp_user &
  # smtp_pass variables should be used
  #
  email:
    enable_notifs: false
    smtp_host: "localhost"
    smtp_port: 25
  #   smtp_user: "exampleusername"
  #   smtp_pass: "examplepassword"
    require_transport_security: false
    notif_from: "Your Friendly %(app)s Home Server <noreply@{{ synapse_server_name }}>"
  #   app_name: Matrix
  #   template_dir: res/templates
  #   notif_template_html: notif_mail.html
  #   notif_template_text: notif_mail.txt
  #   notif_for_new_users: true
  #   riot_base_url: "http://localhost/riot"

  # password_providers:
  #     - module: "ldap_auth_provider.LdapAuthProvider"
  #       config:
  #         enabled: true
  #         uri: "ldap://ldap.example.com:389"
  #         start_tls: true
  #         base: "ou=users,dc=example,dc=com"
  #         attributes:
  #            uid: "cn"
  #            mail: "email"
  #            name: "givenName"
  #         #bind_dn:
  #         #bind_password:
  #         #filter: "(objectClass=posixAccount)"

  # Clients requesting push notifications can either have the body of
  # the message sent in the notification poke along with other details
  # like the sender, or just the event ID and room ID (`event_id_only`).
  # If clients choose the former, this option controls whether the
  # notification request includes the content of the event (other details
  # like the sender are still included). For `event_id_only` push, it
  # has no effect.

  # For modern android devices the notification content will still appear
  # because it is loaded by the app. iPhone, however will send a
  # notification saying only that a message arrived and who it came from.
  #
  # push:
  #   include_content: true

  # Spam checkers are third-party modules that can block specific actions
  # of local users, such as creating rooms and registering undesirable
  # usernames, as well as remote users by redacting incoming events.
  #
  spam_checker:
  # - module: "my_custom_project.SuperSpamChecker"
  #   config:
  #     example_option: 'things'
  # - module: "some_other_project.BadEventStopper"
  #   config:
  #     example_stop_events_from: ['@bad:example.com']

  # Whether to allow non server admins to create groups on this server
  enable_group_creation: false
  # If enabled, non server admins can only create groups with local parts
  # starting with this prefix
  # group_creation_prefix: "unofficial/"

  # User Directory configuration
  #
  # 'search_all_users' defines whether to search all users visible to your HS
  # when searching the user directory, rather than limiting to users visible
  # in public rooms.  Defaults to false.  If you set it True, you'll have to run
  # UPDATE user_directory_stream_pos SET stream_id = NULL;
  # on your database to tell it to rebuild the user_directory search indexes.
  #
  # user_directory:
  #   search_all_users: false
...
